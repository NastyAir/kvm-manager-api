<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
	<!--日志文件存储路径 -->
	<property name="LOG_PATH" value="logs" />
	<springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
	<!--格式化：%d日期，%thread线程名，%-5level：级别从左显示5个字符宽度 %logger名称 %msg：日志消息，%n是换行符 -->
	<property name="LOG_PATTERN" value="%d %-5level [%thread] %logger{36}: %msg%n" />

	<!-- 控制台输出 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- info日志文件 -->
	<appender name="info_file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!--日志文件名规则 -->
			<fileNamePattern>${LOG_PATH}/info.${APP_NAME}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
			<!--日志文件保留天数 -->
			<maxHistory>90</maxHistory>
			<!--日志文件最大的大小 -->
			<maxFileSize>20MB</maxFileSize>
			<!--用来指定日志文件的上限大小，例如设置为1GB的话，那么到了这个值，就会删除旧的日志。 -->
			<totalSizeCap>5GB</totalSizeCap>
		</rollingPolicy>
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- error日志文件 -->
	<appender name="error_file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!--日志文件名规则 -->
			<fileNamePattern>${LOG_PATH}/error.${APP_NAME}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
			<!--日志文件保留天数 -->
			<maxHistory>90</maxHistory>
			<!--日志文件最大的大小 -->
			<maxFileSize>20MB</maxFileSize>
			<!--用来指定日志文件的上限大小，例如设置为1GB的话，那么到了这个值，就会删除旧的日志。 -->
			<totalSizeCap>5GB</totalSizeCap>
		</rollingPolicy>
		<append>true</append>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
		<!-- 只记录error级别的信息 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>error</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="console" />
		<appender-ref ref="info_file" />
		<appender-ref ref="error_file" />
	</root>

  <!--
  <pattern>
      %d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n
      Logger: %logger
      Class: %class
      File: %file
      Caller: %caller
      Line: %line
      Message: %m
      Method: %M
      Relative: %relative
      Thread: %thread
      Exception: %ex
      xException: %xEx
      nopException: %nopex
      rException: %rEx
      Marker: %marker
      newline:%n
  </pattern>
  -->

</configuration>